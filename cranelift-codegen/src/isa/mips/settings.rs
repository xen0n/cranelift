//! MIPS Settings.

use crate::settings::{self, detail, Builder};
use core::fmt;

// Include code generated by `cranelift-codegen/meta-python/gen_settings.py`. This file contains a public
// `Flags` struct with an impl for all of the settings defined in
// `cranelift-codegen/meta-python/isa/mips/settings.py`.
include!(concat!(env!("OUT_DIR"), "/settings-mips.rs"));

#[cfg(test)]
mod tests {
    use super::{builder, Flags};
    use crate::settings::{self, Configurable};
    use std::string::ToString;

    #[test]
    fn display_default() {
        let shared = settings::Flags::new(settings::builder());
        let b = builder();
        let f = Flags::new(&shared, b);
        assert_eq!(
            f.to_string(),
            "[mips]\n\
             supports_lext = false\n\
             enable_lext = true\n"
        );
    }
}
